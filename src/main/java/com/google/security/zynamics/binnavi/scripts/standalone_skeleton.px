"""
Copyright 2014 Google Inc. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""
# Note: Copy this file to another directory (it can not be run from the Scripts directory)
# and rename it to py.

# This sample script shows how to use the BinNavi plugin API from stand-alone scripts.
# This makes it possible to use BinNavi objects without actually running BinNavi.
#
# Please note that you have to run this script using Jython, not Python.

import sys

# At first you have to include the relevant JAR files that contain the BinNavi API
# and the database access layer. Additional JAR files like REIL.jar must be included
# if necessary.
sys.path.append('/path/to/binnavi.jar')

from com.google.security.zynamics.binnavi.API.plugins import StandAlone

# Get the plugin interface object that provides access to the BinNavi API
pi = StandAlone.getPluginInterface()

# For stand-alone scripts, the BinNavi configuration file is not read, therefore the
# database that stores all data must be set up manually.
dbm = pi.databaseManager

dbm.addDatabase(
  "database_description",  # database description
  "org.postgresql.Driver", # database driver
  "database_host",         # database host
  "database_name",         # database name
  "database_user",         # database user
  "database_password",     # database password
  "Max Mustermann",        # collaboration name
  False,                   # save password
  False)                   # auto connect

db = dbm.databases[0]

db.connect()
db.load()

for module in db.modules:
  print module.name

sys.exit(0)
